### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Game {
  host: GamePlayer!
  id: ID!
  players: [GamePlayer!]!
}

type GameCreateGameResult {
  game: Game!
}

enum GameJoinGameErrorType {
  GAME_ALREADY_JOINED
  MAXIMUM_NUMBER_OF_PLAYERS_REACHED
}

input GameJoinGameInput {
  gameId: ID!
}

union GameJoinGameResult = GameJoinGameResultError | GameJoinGameResultSuccess

type GameJoinGameResultError {
  type: GameJoinGameErrorType!
}

type GameJoinGameResultSuccess {
  game: Game!
}

type GamePlayer {
  id: ID!
  name: String!
}

enum GameStartGameErrorType {
  NOT_ENOUGH_PLAYERS
  ONLY_HOST_CAN_START_GAME
}

input GameStartGameInput {
  gameId: ID!
}

union GameStartGameResult = GameStartGameResultError | GameStartGameResultSuccess

type GameStartGameResultError {
  type: GameStartGameErrorType!
}

type GameStartGameResultSuccess {
  gameId: ID!
}

type Mutation {
  gameCreateGame: GameCreateGameResult!
  gameJoinGame(joinGameInput: GameJoinGameInput): GameJoinGameResult!
  gameStartGame(startGameInput: GameStartGameInput): GameStartGameResult!
}

type Query {
  games: [Game!]!
}
